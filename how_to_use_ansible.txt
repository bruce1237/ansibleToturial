commands:

for Docs: https://docs.ansible.com/ansible/latest/collections


1.      CMD: ansible all --key-file sshKeyFile -i inventoryFile -m [m for module] ping [ping each slave]

2.      CMD: ansible all -m gather_facts
        //show details across all hosts
        --limit IPAddressOfHost
        //show only details of IPAddressedHost

3. how to run command in the slave server in root?
        CMD: ansible all -m apt -a update_cache --become --ask-become-pass
        -m: module Name
        -a: argument for the module
        --become: become root user
        --ask-become-pass: ask password for root user



create ansible config file
1.      create config file: ansible.cfg

        ansible.cfg:
        [defaults]
        inventory = inventoryFile
        private_key_file = sshkeyFile


install git to slaves
        CMD: ansible all -m yum -a name=git
        -m: using yum module, for details please check the url at begining
        -a: package name = git
                if more than one arguments: "arg1=val1 arg2=val2"

gether inforation about slave
        CMD: ansible all -m gather_facts --limit[target slave] slaveIPAddress
        this will show some ansible built in variables and values



check ansible tags:
	CMD: ansible-playbook --list-tags playbook.yml
	this will list all the tags in the playbook
	e.g.:
	
	playbook: tag_site.yml

	  play #1 (all): all    TAGS: []
	      TASK TAGS: [always]

	  play #2 (web_servers): web_servers    TAGS: []
	      TASK TAGS: [apache, apache2, ubuntu]

	  play #3 (db_servers): db_servers      TAGS: []
	      TASK TAGS: [centos, db, mariadb]

	  play #4 (file_servers): file_servers  TAGS: []
	      TASK TAGS: [samba]

use ansible tags:
	CMD: ansible-playbook --tags tagName playbook.yml	
	e.g. 
		 ansible-playbook -i grouped_inventory --tags centos tag_site.yml
	for multi-tags:
	e.g. 
		 ansible-playbook -i grouped_inventory --tags "centos,apache" tag_site.yml


Copy file to slave servie
	files is default folder
	Direcotry: ./files/default_site.html
		   ./abc/a.html
	
	playbook:
	 - name: copy default html file to slave
	   tags: apache,apache2, httpd
	   copy:
		src: default_site.html
	   	dest: /var/www/html/newIndex.html
           	owner: root
           	group: root
           	mode: 0644

	- name: copy default html file to slave
	  tags: apache,apache2, httpd
	  copy:
		src: ./abc/a.html
		dest: /var/www/html/newIndexa.html
		owner: root
		group: root
		mode: 0644



how to start / stop services in the slave:
	in play-book:
	stats: started | stopped ..
	enabled: yes  //auto-start when server is up

how to restart service in slave:
	in play-book:


how to check server / slave uptime:
	CMD: ansible -i inventory ipORgroupName -a uptime
	ipORgroupName is in the inventory file

how to check server / slave memory:
	CMD: ansible -i grouped_inventory workstations -a "free -m"

how to add user / group to slave:
	CMD: ansible# ansible -i grouped_inventory web_servers -m user -a "name=user2 createhome=yes" -b
	-m user: using user module
	-a: [-a means options] indicates certain options that are passing to create user by specify user name and createhome = yes


how to create directory in slave:
	CMD:  ansible -i grouped_inventory workstations -m file -a 'path=/home/ubuntu state=directory mode=755' -b
	-a: options for -m module
	-b: I think means --become  using root
	NOTE: the directory created is under the name of root 



how to create file in slave:
	CMD: ansible -i grouped_inventory web_servers -m file -a 'path=/home/ubuntu/test.txt state=touch mode=755' -b


aaPanel:
Install:
	CMD: wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh && sudo bash install.sh

Access:

aaPanel Internet Address: https://90.243.242.132:7800/316aee41
aaPanel Internal Address: https://172.17.0.2:7800/316aee41
username: k4eznuof
password: efbca888
Warning:
If you cannot access the panel,
release the following port (7800|888|80|443|20|21) in the security group
